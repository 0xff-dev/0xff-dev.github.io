<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>联邦集群安装</title>
      <link href="/2019/11/12/1/"/>
      <url>/2019/11/12/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 在配置完两个<code>k8s</code>集群后，本篇文章记录配置联邦集群</p><a id="more"></a><h2 id="联邦集群安装步骤"><a href="#联邦集群安装步骤" class="headerlink" title="联邦集群安装步骤"></a>联邦集群安装步骤</h2><ol><li><p>安装kubefedctl</p><blockquote><p>在<a href="https://github.com/kubernetes-sigs/kubefed/releases" target="_blank" rel="noopener">kubefedctl</a> 下载到主集群，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf kubefedctl-*.tgz</span><br><span class="line">mv kubefedctl /usr/bin</span><br></pre></td></tr></table></figure></blockquote></li><li><p>如果是k8s 1.16之后的版本，使用&gt;=2.14.3 的helm, 创建tiller的sa</p><blockquote><p><a href="https://github.com/kubernetes-sigs/kubefed/blob/master/charts/kubefed/README.md" target="_blank" rel="noopener">创建<code>tiller</code>的sa</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: tiller</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: cluster-admin</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: tiller</span><br><span class="line">    namespace: kube-system</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">  初始化helm</span></span><br><span class="line">helm init --service-account tiller -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.15.2  --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br></pre></td></tr></table></figure></blockquote></li><li><p>使用helm安装<code>kubefed</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/kubernetes-sigs/kubefed.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成chart包</span></span><br><span class="line">cd kubefed/charts/kubefed &amp;&amp; helm package .</span><br><span class="line"></span><br><span class="line">helm install /root/kubefed/charts/kubefed/kubefed-*.tgz --name kubefed --namespace kube-federation-system</span><br></pre></td></tr></table></figure></li><li><p>加入集群</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开主集群的<span class="variable">$HOME</span>/.kube/config文件, 修改里面的文件内容</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">clusters:</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: DATA+OMITTED</span><br><span class="line">    server: https://192.168.6.11:6443</span><br><span class="line">  name: cluster1</span><br><span class="line">- cluster:</span><br><span class="line">    certificate-authority-data: DATA+OMITTED</span><br><span class="line">    server: https://192.168.6.22:6443</span><br><span class="line">  name: cluster2</span><br><span class="line">contexts:</span><br><span class="line">- context:</span><br><span class="line">    cluster: cluster1</span><br><span class="line">    user: cluster1</span><br><span class="line">  name: cluster1</span><br><span class="line">- context:</span><br><span class="line">    cluster: cluster2</span><br><span class="line">    user: cluster2</span><br><span class="line">  name: cluster2</span><br><span class="line">current-context: cluster2</span><br><span class="line">kind: Config</span><br><span class="line">preferences: &#123;&#125;</span><br><span class="line">users:</span><br><span class="line">- name: cluster1</span><br><span class="line">  user:</span><br><span class="line">    client-certificate-data: REDACTED</span><br><span class="line">    client-key-data: REDACTED</span><br><span class="line">- name: cluster2</span><br><span class="line">  user:</span><br><span class="line">    client-certificate-data: REDACTED</span><br><span class="line">    client-key-data: REDACTED</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> cluster1是联邦集群所在的host cluster， cluster2是加入联邦的集群。cluster2的 certificate-authority-data， client-certificate-data， client-key-data 这几个数据可以在cluster2集群的<span class="variable">$HOME</span>/.kube/config文件找到，写进来即可.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 产看上下文环境</span></span><br><span class="line">kubectl config get-contexts</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出如下</span></span><br><span class="line">CURRENT   NAME       CLUSTER    AUTHINFO   NAMESPACE</span><br><span class="line">          cluster1   cluster1   cluster1</span><br><span class="line">*         cluster2   cluster2   cluster2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加入集群</span></span><br><span class="line">kubefedctl join cluster1 --cluster-context cluster1 --host-cluster-context cluster1</span><br><span class="line">kubefedctl join cluster2 --cluster-context cluster2 --host-cluster-context cluster1</span><br></pre></td></tr></table></figure></li><li><p>查看联邦的集群</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n kube-federation-system get kubefedclusters</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如下输出</span></span><br><span class="line">NAME       AGE    READY</span><br><span class="line">cluster1   174m   True</span><br><span class="line">cluster2   141m   True</span><br></pre></td></tr></table></figure></li></ol><h2 id="联邦操作demo"><a href="#联邦操作demo" class="headerlink" title="联邦操作demo"></a>联邦操作demo</h2><ol><li><p>测试创建namespace</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kubectl create ns test-namespace</span><br><span class="line">kubefedctl federate namesapce test-namespace --host-cluster-context=cluster1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 回到cluster2查看是否存在 <span class="built_in">test</span>-namespace的命名空间, 可以看到已经存在</span></span><br><span class="line">NAME             STATUS   AGE</span><br><span class="line">test-namespace   Active   4h42m</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在cluster2中删除<span class="built_in">test</span>-namespace，查看改ns是否会被重建</span></span><br><span class="line">kubectl delete ns test-namespace</span><br></pre></td></tr></table></figure></li><li><p>创建nginx的应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建应用有两种形式。</span></span><br><span class="line">1. 在host集群利用k8s资源创建nginx，然后联邦到其他的集群</span><br><span class="line">kubectl apply -f nginx.yaml</span><br><span class="line">kubefedctl federate deployments.apps nginx&lt;这个nginx是创建的deployment的名称&gt; -n test-namespace --host-cluster-context=cluste1</span><br><span class="line"></span><br><span class="line">2. 直接利用联邦资源创建, 在不同集群分配不同数量的pods</span><br><span class="line">kubectl apply -f https://github.com/kubernetes-sigs/kubefed/blob/master/example/sample1/federateddeployment.yaml</span><br><span class="line"></span><br><span class="line">3. 分别到cluster1，cluster2集群查看pods的数量</span><br><span class="line">cluster1</span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-85ff79dd56-5dhrw            1/1     Running   0          7m17s</span><br><span class="line">nginx-85ff79dd56-lvf6x            1/1     Running   0          7m17s</span><br><span class="line">test-deployment-7c867888f-2h4nr   1/1     Running   0          7m24s</span><br><span class="line">test-deployment-7c867888f-lrmg6   1/1     Running   0          7m24s</span><br><span class="line">test-deployment-7c867888f-lttql   1/1     Running   0          7m24s</span><br><span class="line"></span><br><span class="line">cluster2</span><br><span class="line">nginx-85ff79dd56-t9mzr             1/1     Running   0          7m36s</span><br><span class="line">nginx-85ff79dd56-xbbxp             1/1     Running   0          7m36s</span><br><span class="line">test-deployment-59769b7d7d-48sw5   1/1     Running   0          7m43s</span><br><span class="line">test-deployment-59769b7d7d-86r9k   1/1     Running   0          7m43s</span><br><span class="line">test-deployment-59769b7d7d-c9lfz   1/1     Running   0          7m43s</span><br><span class="line">test-deployment-59769b7d7d-shsnr   1/1     Running   0          7m43s</span><br><span class="line">test-deployment-59769b7d7d-sr6wd   1/1     Running   0          7m43s</span><br><span class="line"></span><br><span class="line">可以看到cluster1有3个pod，cluster2有5个pod。利用的联邦override.</span><br></pre></td></tr></table></figure></li><li><p>存在的疑问</p><blockquote><p>deployment已经部署好，在非host cluster上把联邦创建的集群ns删除，ns会重建，但是里面的resource不会重建，当把host cluster的资源删除的时候，联邦会创建相应的资源。</p></blockquote></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> federation-cluster </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用kubeadm搭建k8s集群</title>
      <link href="/2019/11/03/1/"/>
      <url>/2019/11/03/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 利用周末时间完成两个集群的搭建。<br><a id="more"></a></p><blockquote><p>本篇文章使用的系统环境是<code>centos7</code>, 使用的是<code>root</code>用户。普通用户使用命令加上<code>sudo</code></p></blockquote><h2 id="准备两个虚拟机，固定好ip"><a href="#准备两个虚拟机，固定好ip" class="headerlink" title="准备两个虚拟机，固定好ip"></a>准备两个虚拟机，固定好ip</h2><blockquote><p>固定ip使用 <code>nmtui</code> 命令，会有图形界面提示。</p></blockquote><h2 id="Master，Node都需要安装-配置docker"><a href="#Master，Node都需要安装-配置docker" class="headerlink" title="Master，Node都需要安装, 配置docker"></a>Master，Node都需要安装, 配置docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载原来的docker</span></span><br><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装依赖</span></span><br><span class="line">sudo yum update -y &amp;&amp; sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加官方yum库</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">    </span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装docker</span></span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看docker版本</span></span><br><span class="line">docker --version</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开机启动</span></span><br><span class="line">systemctl enable --now docker</span><br></pre></td></tr></table></figure><h2 id="修改docker-cgroup驱动，与k8s保持一致，使用systemd"><a href="#修改docker-cgroup驱动，与k8s保持一致，使用systemd" class="headerlink" title="修改docker cgroup驱动，与k8s保持一致，使用systemd"></a>修改docker cgroup驱动，与k8s保持一致，使用systemd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 修改docker cgroup驱动：native.cgroupdriver=systemd</span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [</span><br><span class="line">    &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl restart docker  # 重启使配置生效</span><br></pre></td></tr></table></figure><h2 id="安装kubelet-kubeadm-kubectl"><a href="#安装kubelet-kubeadm-kubectl" class="headerlink" title="安装kubelet, kubeadm,kubectl"></a>安装kubelet, kubeadm,kubectl</h2><blockquote><p>master, node 都需要安装, 使用阿里的yum仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 关闭SElinux</span><br><span class="line">setenforce 0</span><br><span class="line">sed -i &apos;s/^SELINUX=enforcing$/SELINUX=permissive/&apos; /etc/selinux/config</span><br><span class="line"></span><br><span class="line"># 安装kubelet kubeadm kubectl</span><br><span class="line">yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl enable --now kubelet  # 开机启动kubelet</span><br><span class="line"></span><br><span class="line"># centos7用户还需要设置路由：</span><br><span class="line">yum install -y bridge-utils.x86_64</span><br><span class="line">modprobe  br_netfilter  # 加载br_netfilter模块，使用lsmod查看开启的模块</span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system  # 重新加载所有配置文件</span><br><span class="line"></span><br><span class="line">systemctl disable --now firewalld  # 关闭防火墙</span><br><span class="line"></span><br><span class="line"># k8s要求关闭swap  (qxl)</span><br><span class="line">swapoff -a &amp;&amp; sysctl -w vm.swappiness=0  # 关闭swap</span><br><span class="line">sed -ri &apos;/^[^#]*swap/s@^@#@&apos; /etc/fstab  # 取消开机挂载swap</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h2><blockquote><p> 通过<code>kubeadm config images list</code>查看所需要的镜像。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">k8s.gcr.io/kube-apiserver:v1.16.2</span><br><span class="line">k8s.gcr.io/kube-controller-manager:v1.16.2</span><br><span class="line">k8s.gcr.io/kube-scheduler:v1.16.2</span><br><span class="line">k8s.gcr.io/kube-proxy:v1.16.2</span><br><span class="line">k8s.gcr.io/pause:3.1</span><br><span class="line">k8s.gcr.io/etcd:3.3.15-0</span><br><span class="line">k8s.gcr.io/coredns:1.6.2</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>下载镜像需要FQ，所以在没有配置FQ的情况下，可以使<code>mirrorgooglecontainer</code>仓库的镜像(docker对google的容器做的镜像)。pull完之后修改tag，在删除<code>mirrorgooglecontainer</code>的镜像即可, 执行下面的脚本</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">images=(kube-apiserver-amd64:v1.16.2 kube-controller-manager-amd64:v1.16.2  kube-scheduler-amd64:v1.16.2 kube-proxy-amd64:v1.16.2 pause-amd64:3.1 etcd:3.3.15-0 )</span><br><span class="line">for image in $&#123;images[@]&#125; ; do</span><br><span class="line">  imageName=`echo $image |sed 's/-amd64//g'`</span><br><span class="line">  docker pull mirrorgooglecontainers/$image</span><br><span class="line">  docker tag mirrorgooglecontainers/$image k8s.gcr.io/$imageName</span><br><span class="line">  docker rmi mirrorgooglecontainers/$image</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> coredns 不在 mirrorgooglecontainer里面，所以单独写.</span></span><br><span class="line">docker pull coredns/coredns:1.6.2</span><br><span class="line">docker tag coredns/coredns:1.6.2 k8s.gcr.io/coredns:1.6.2</span><br><span class="line">docker rmi coredns/coredns:1.6.2</span><br></pre></td></tr></table></figure><h2 id="使用kubeadm创建集群"><a href="#使用kubeadm创建集群" class="headerlink" title="使用kubeadm创建集群"></a>使用kubeadm创建集群</h2><blockquote><p>命令后面使用<code>--kubernetes-version</code> 指定了使用的k8s版本。运行初始化，程序会检验环境一致性，可以根据实际错误提示进一步修复问题<br>程序会访问<a href="https://dl.k8s.io/release/stable-1.txt" target="_blank" rel="noopener">https://dl.k8s.io/release/stable-1.txt</a> 获取最新的k8s版本，访问这个连接需要FQ，如果无法访问，则会使用kubeadm client的版本作为安装的版本号，使用kubeadm version查看client版本。也可以使用–kubernetes-version明确指定版本</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init --apiserver-advertise-address &lt;你固定的虚拟机ip&gt; --pod-network-cidr 10.244.0.0/16 --kubernetes-version 1.16.2</span><br></pre></td></tr></table></figure><h2 id="设置用户权限，以及flannel网络"><a href="#设置用户权限，以及flannel网络" class="headerlink" title="设置用户权限，以及flannel网络"></a>设置用户权限，以及flannel网络</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置flannel网络 原文件位置https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果网络无法连接，可以复制到本地在appply</span></span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/stevenshuang/docker-playground/master/flannel.yaml</span><br></pre></td></tr></table></figure><h2 id="node-加入集群"><a href="#node-加入集群" class="headerlink" title="node 加入集群"></a>node 加入集群</h2><blockquote><p>在node节点执行命令<br>在master上使用kubeadm创建完成集群后，会看到一个有用的命令<code>kubeadm join 192.168.200.25:6443 --token our9a0.zl490imi6t81tn5u --discovery-token-ca-cert-hash sha256:b93f710eb9b389a69f0cd0d6dcf7c82e389a68f009eb6b2028f69d54b099de16</code> 这个是用来向master添加node使用的。如果没有注意，toke的值可以master上通过<code>kubeadm token list</code>查看, sha256 的值在master节点通过<br><code>openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &#39;s/^.* //&#39;</code> 查看即可.</p></blockquote><h2 id="查看节点情况"><a href="#查看节点情况" class="headerlink" title="查看节点情况"></a>查看节点情况</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubectl get node</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加一个nginx测试</span></span><br><span class="line">kubectl run my-nginx --image=nginx --replicas=2 --port=80</span><br><span class="line"><span class="meta">#</span><span class="bash">  大概等一会查看pod的分配情况</span></span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 下面是输出, 可以看到nginx正常启动了。</span></span></span><br><span class="line">NAME                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">my-nginx-75897978cd-mxks4   1/1     Running   0          98m</span><br><span class="line">my-nginx-75897978cd-qm2sv   1/1     Running   0          98m</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://juejin.im/post/5cb7dde9f265da034d2a0dba" target="_blank" rel="noopener">2019最新k8s集群搭建教程 (centos k8s 搭建)</a><br><a href="https://blog.51cto.com/tryingstuff/2445675" target="_blank" rel="noopener">K8S 1.16.2 部署</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习使用ip命令</title>
      <link href="/2019/10/28/1/"/>
      <url>/2019/10/28/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 在看《k8s权威指南》，讲到k8s的网络部分，对linux的<code>ip</code>命令做一下笔记.<br><a id="more"></a></p><blockquote><p>ip需要root权限执行, 本文主要是对发现的好文章做的整理。</p></blockquote><h2 id="ip-brctl-安装"><a href="#ip-brctl-安装" class="headerlink" title="ip, brctl 安装"></a>ip, brctl 安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install iproute2 bridge-utils -y</span><br></pre></td></tr></table></figure><h2 id="ip基本命令"><a href="#ip基本命令" class="headerlink" title="ip基本命令"></a>ip基本命令</h2><ol><li>ip link show                 # 显示网络接口信息</li><li>ip link set dev eth0 up/down # 开启/关闭网卡</li><li>ip addr show                 # 显示网卡IP信息</li><li>ip netns add name          # 添加网络命名空间</li><li>ip netns exec name <code>command</code> # 在网络命名空间内执行命令</li></ol><h2 id="连接两个网络环境"><a href="#连接两个网络环境" class="headerlink" title="连接两个网络环境"></a>连接两个网络环境</h2><ol><li><p>建立两个网络环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip netns add net0</span><br><span class="line">ip netns add net1</span><br></pre></td></tr></table></figure></li><li><p>建立<code>设备对</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link add type veth</span><br></pre></td></tr></table></figure></li><li><p>设备对与网络关联</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link set veth0 netns net0</span><br><span class="line">ip link set veth1 netns net1</span><br></pre></td></tr></table></figure></li><li><p>启用veth0, veth1, 以及设置网络的IP地址段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 ip link set veth0 up</span><br><span class="line">ip netns exec net0 ip addr add 10.0.1.1/24 dev veth0</span><br><span class="line"></span><br><span class="line">ip netns exec net1 ip link set veth1 up</span><br><span class="line">ip netns exec net1 ip addr add 10.0.1.2/24 dev veth2</span><br></pre></td></tr></table></figure></li><li><p>测试连通性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 ping -c 3 10.0.1.2</span><br></pre></td></tr></table></figure></li></ol><h2 id="使用网桥"><a href="#使用网桥" class="headerlink" title="使用网桥"></a>使用网桥</h2><ol><li><p>创建虚拟环境，设置设备对及网络命名空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ip netns add net0</span><br><span class="line">ip netns add net1</span><br><span class="line">ip netns ad bridge</span><br><span class="line">ip link add type veth</span><br><span class="line">ip link set dev veth0 name net0-bridge netns net0</span><br><span class="line">ip link set dev veth1 name bridge-net0 netns bridge</span><br><span class="line">ip link add type veth</span><br><span class="line">ip link set dev veth0 name net1-bridge netns net1</span><br><span class="line">ip link set dev veth1 nmae beidge-net1 netns bridge</span><br></pre></td></tr></table></figure></li><li><p>在bridge中创建br设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec bridge brctl addr br</span><br><span class="line">ip netns exec bridge ip link set dev br up</span><br><span class="line">ip netns exec bridge ip link set dev bridge-net0 up</span><br><span class="line">ip netns exec bridge ip link set dev bridge-net1 up</span><br><span class="line">ip netns exec bridge brctl addif br bridge-net0</span><br><span class="line">ip netns exec bridge brctl addif br bridge-net1</span><br></pre></td></tr></table></figure></li><li><p>配置虚拟环境的网卡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ip netns exec net0 ip link set dev net0-bridge up</span><br><span class="line">ip netns exec net0 ip address add 10.0.1.1/24 dev net0-bridge</span><br><span class="line"></span><br><span class="line">ip netns exec net1 ip link set dev net1-bridge up</span><br><span class="line">ip netns exec net1 ip address add 10.0.1.2/24 dev net1-bridge</span><br></pre></td></tr></table></figure></li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://blog.kghost.info/2013/03/01/linux-network-emulator/" target="_blank" rel="noopener">网络虚拟化技术（一）: Linux网络虚拟化</a></li><li><a href="https://wangchujiang.com/linux-command/c/ip.html" target="_blank" rel="noopener">ip</a></li><li><a href="https://cizixs.com/2017/02/10/network-virtualization-network-namespace/" target="_blank" rel="noopener">linux 网络虚拟化： network namespace 简介</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿写QQ说说空间评论</title>
      <link href="/2019/09/22/1/"/>
      <url>/2019/09/22/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 其实这评论的功能是自己一直想写点，终于有时间并且学习了<code>vue</code>, 做一次尝试<br><a id="more"></a></p><h2 id="评论组件"><a href="#评论组件" class="headerlink" title="评论组件"></a>评论组件</h2><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><div><br>    <img src="/images/comment.png" width="450px" height="200px" title="pagination" alt="pagination"><br></div><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><blockquote><p>主要是结构, 定义如下<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    <span class="attr">"commentID"</span>: <span class="string">"xx"</span>,</span><br><span class="line">    <span class="attr">"content"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">    <span class="attr">"who"</span>: <span class="string">"写评论人"</span>,</span><br><span class="line">    <span class="attr">"reply_user"</span>:<span class="string">"回复谁的评论, 处于"</span>,</span><br><span class="line">    <span class="attr">"time"</span>: <span class="string">"回复时间"</span>,</span><br><span class="line">    <span class="attr">"father"</span>: <span class="string">"回复问题的情况，father=问题id，其他情况，father=上层的评论id"</span>,</span><br><span class="line">    <span class="attr">"comments"</span>:[</span><br><span class="line">        &#123;<span class="attr">"commentID"</span>:<span class="string">"xxxx"</span>, <span class="attr">"content"</span>:<span class="string">"fdf"</span>, <span class="attr">"who"</span>:<span class="string">"user"</span>, <span class="attr">"reply_user"</span>:<span class="string">"user-id"</span>, <span class="attr">"time"</span>:<span class="string">""</span>, <span class="attr">"father"</span>:<span class="string">"xx指向上层的评论id"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>对这个结构的遍历，填入dom里，就不需要说了，接下来的一个问题是在QQ评论中，他的评论框回发生变动，其中的规律，大家看了就明白。<br>对于这个输入框的位置实现，主要是依靠了两个变量<code>x,y</code>，x是只外层循环的index，y是对comments字段的index，对位置进行控制.  </p></blockquote><h3 id="整体的代码实现"><a href="#整体的代码实现" class="headerlink" title="整体的代码实现"></a>整体的代码实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;comment-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;comment&quot; v-for=&quot;(out, outIndex) in commentsData&quot; :key=&quot;outIndex&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;father-content&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;head-icon&quot;&gt;</span><br><span class="line">                     &lt;img :src=&quot;headIcon&quot;&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;comment-content&quot;&gt;</span><br><span class="line">                    &lt;a&gt;&#123;&#123;out.who&#125;&#125;&amp;nbsp;&amp;nbsp;:&lt;/a&gt;&#123;&#123;out.content&#125;&#125;</span><br><span class="line">                    &lt;div class=&quot;time-reply&quot;&gt;</span><br><span class="line">                        &lt;!-- 这里是指的外层循环，点击这里的情况，只需要控制x的值即可--&gt;</span><br><span class="line">                        &lt;span&gt;12:30&lt;/span&gt; &lt;span class=&quot;reply-btn&quot; @click=&quot;showInput(outIndex,0, out.who)&quot;&gt;回复&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;reply-list&quot; &gt;</span><br><span class="line">                &lt;div class=&quot;reply-item&quot; v-for=&quot;(inner, innerIndex) in out.comments&quot; :key=&quot;innerIndex&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;head-icon&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;headIcon&quot;&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;comment-content&quot;&gt;</span><br><span class="line">                        &lt;a&gt;&#123;&#123;inner.who&#125;&#125;&lt;/a&gt;&amp;nbsp;&amp;nbsp;回复&amp;nbsp;&amp;nbsp;&lt;a&gt;&#123;&#123;inner.reply_user&#125;&#125;&lt;/a&gt;&amp;nbsp;&amp;nbsp;:&#123;&#123;inner.content&#125;&#125;</span><br><span class="line">                         &lt;div class=&quot;time-reply&quot;&gt;</span><br><span class="line">                            &lt;span&gt;12:30&lt;/span&gt; &lt;span class=&quot;reply-btn&quot; @click=&quot;showInput(outIndex, innerIndex, inner.who)&quot;&gt;回复&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;comment-frame&quot; v-if=&quot;x==outIndex&quot;&gt;</span><br><span class="line">                    &lt;textarea cols=&quot;80&quot; rows=&quot;50&quot; v-model=&quot;commentData&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">                    &lt;!--这里是添加评论的函数--&gt;</span><br><span class="line">                    &lt;button @click=&quot;publishComment(outIndex, 0, out.comment_id)&quot;&gt;评论个锤子&lt;/button&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;comment-frame&quot; v-if=&quot;(y == -1 &amp;&amp; x != -1) || (x==-1 &amp;&amp; y==-1)&quot;&gt;</span><br><span class="line">            &lt;textarea cols=&quot;80&quot; rows=&quot;50&quot; v-model=&quot;commentData&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">            &lt;button @click=&quot;publishComment(outIndex, -1, &apos;&apos;, problemId)&quot;&gt;评论个锤子&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import Axios from &apos;axios&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data: function() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            commentsData: [],</span><br><span class="line">            headIcon: require(`../assets/images/head.png`),</span><br><span class="line">            problemId: &quot;1&quot;,</span><br><span class="line">            replyUser: &quot;&quot;,</span><br><span class="line">            commentData: &quot;&quot;, // 指用户在打开回复的时候，填入数据，点击旁边，输入框不会消失, 否则会消失，同时也是数据双向绑定</span><br><span class="line">            // x和y是为了定位输入框的问题</span><br><span class="line">            // 用户评论的时候，首先向数组添加数据，再去发请求</span><br><span class="line">            x: -1,</span><br><span class="line">            y: -1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created: function() &#123;</span><br><span class="line">        Axios.get(&quot;http://localhost:8888/comments&quot;).then(response =&gt; &#123;this.commentsData = response.data.data&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        showInput: function(_x, _y, username) &#123;</span><br><span class="line">            this.x = _x</span><br><span class="line">            this.y = _y</span><br><span class="line">            this.replyUser = username</span><br><span class="line">            window.console.log(&quot;x: &quot;, this.x, &quot; y: &quot;, this.y)</span><br><span class="line">        &#125;,</span><br><span class="line">        publishComment: function(x, y, father) &#123;</span><br><span class="line">            this.x = -1</span><br><span class="line">            this.y = -1</span><br><span class="line">            const comment = this.commentData</span><br><span class="line">            let _type = 0</span><br><span class="line">            let inputData = &#123;&quot;comment_id&quot;: &quot;7788&quot;, &quot;content&quot;: comment, &quot;who&quot;: &quot;user1&quot;, &quot;reply_user&quot;: &quot;&quot;, &quot;father&quot;: &quot;pid&quot;&#125;</span><br><span class="line">            if(y == -1) &#123;</span><br><span class="line">                _type = 1</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                inputData.reply_user = this.replyUser</span><br><span class="line">                inputData.father = father</span><br><span class="line">            &#125;</span><br><span class="line">            inputData[&quot;type&quot;] = _type</span><br><span class="line">            this.commentData = &quot;&quot;</span><br><span class="line">            Axios.post(&quot;http://localhost:8888/comments1&quot;, inputData).then(response =&gt; &#123;this.commentsData = response.data.data&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.comment-container&#123;</span><br><span class="line">    width: 50%;</span><br><span class="line">    height: auto;</span><br><span class="line">    margin: 10px;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.father-content &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-direction: row;</span><br><span class="line">    align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.head-icon &#123;</span><br><span class="line">    width: 40px;</span><br><span class="line">    height: 40px;</span><br><span class="line">    margin-right: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.reply-btn &#123;</span><br><span class="line">    margin-left: 20px;</span><br><span class="line">    color: rgb(16, 180, 230);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.reply-list &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">.reply-item &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: flex-start;</span><br><span class="line">    align-items: flex-start;</span><br><span class="line">    margin: 10px 0 0 0;</span><br><span class="line">    margin-left: 45px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.comment-content&#123;</span><br><span class="line">    word-break: break-all; </span><br><span class="line">    text-align:start;</span><br><span class="line">    word-wrap:break-word; </span><br><span class="line">    width:80%;</span><br><span class="line">    height:auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.comment-frame &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: flex-start;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    width: 80%;</span><br><span class="line">    text-align: start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.comment-frame button &#123;</span><br><span class="line">    align-self: flex-end;</span><br><span class="line">    border: none;</span><br><span class="line">    outline: none;</span><br><span class="line">    margin-top: 5px; </span><br><span class="line">    width: 80px;</span><br><span class="line">    height: 30px;</span><br><span class="line">    background-color: hsl(212, 89%, 51%);</span><br><span class="line">    color: white;</span><br><span class="line">    border-radius: 5px; </span><br><span class="line">&#125;</span><br><span class="line">textarea &#123;</span><br><span class="line">    outline: none;</span><br><span class="line">    padding: 5px;</span><br><span class="line">    resize: none;</span><br><span class="line">    border: gray 1px solid;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    border-width: 2px;</span><br><span class="line">&#125;</span><br><span class="line">.comment-frame textarea &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="继续加油吧"><a href="#继续加油吧" class="headerlink" title="继续加油吧!"></a>继续加油吧!</h2>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用aws做开机自启动docker容器</title>
      <link href="/2019/09/19/1/"/>
      <url>/2019/09/19/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 本篇文章主要讲如何根据aws的linux ami制作自己的ami，并且提供开机自启的docker容器<br><a id="more"></a></p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>我们要做的是根据<code>amazon linux</code>的基础AMI生成实例，放入我们的镜像，提供给别人用，其他人在使用我们的AMI的时候，会自动根据我们的镜像启动容器，进而使用我们的服务。</p></blockquote><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><blockquote><p>所有的操作都是在aws的web平台操作的</p><ol><li>首先选择<code>启动实例</code>, 选择<code>Amazon linux</code>作为我们的基础 AMI, 对于安全组，我们加上我们需要开放的端口即可。启动我们的实例，如果是第一次用帮你生成登录实例的<code>key</code>, 一定要下载，否则无法登录。</li><li>登录实例<code>ssh -i /path/to/key.pem ec2-user@ip</code> key.pem就是你下载的那个文件，默认的情况EC2的实例，登录用户就是<code>ec2-user</code>, ip可以在实例的表格中找到</li><li>安装docker<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo "Updating your OS to latest OS..."</span><br><span class="line">sudo yum update -y</span><br><span class="line"></span><br><span class="line">echo "Installing docker package..."</span><br><span class="line">sudo yum install -y docker</span><br><span class="line"></span><br><span class="line">echo "starting Docker service.."</span><br><span class="line">sudo service docker start</span><br><span class="line"></span><br><span class="line">echo "Adding/providing ec2-user to docker group"</span><br><span class="line">sudo usermod -a -G docker ec2-user</span><br><span class="line"></span><br><span class="line">echo "Relogin to server so that ec2-user will update group"</span><br><span class="line"></span><br><span class="line">echo "Install git package it is required in docker"</span><br><span class="line">sudo yum install -y git</span><br><span class="line"></span><br><span class="line">echo "Install all development tools in linux"</span><br><span class="line">sudo yum -y groupinstall "Development Tools"</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>安装完，设置开机自启 <code>systemctl enable docker</code></p></blockquote><ol start="4"><li>上传我们的镜像，或者在镜像仓库拉取镜像。如果是我们上传的tar.gz文件，使用 <code>docker load -i file.tar.gz</code> 或者 <code>cat file.tar.gz | docker import - name:tag</code>导入镜像，根据导出镜像的形式选择导入方式.</li><li>制作启动脚本<code>start.sh</code><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chkconfig: 2345 80 90</span></span><br><span class="line"><span class="meta">#</span><span class="bash">description:auto_run</span></span><br><span class="line">sudo docker rm $(docker ps -aq)</span><br><span class="line"></span><br><span class="line">sudo docker run --restart=always --name imageName (加入你的参数) /bin/shell</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>我选择在创建/重启机器的时候把现有的容器都清理掉，重新启动，但是保留数据卷。<br>第一行，告诉系统使用的shell,所以的shell脚本都是这样。<br>第 二行，chkconfig后面有三个参数2345,80和90告诉chkconfig程序，需要在rc2.d~rc5.d目录下，创建名字为 S80auto_run的文件连&gt;接，连接到/etc/rc.d/init.d目录下的的auto_run脚本。第一个字符是S，系统在启动的时候，运行脚 本auto_run，就会添加一个start参数，告诉脚本，现在是启动模式。同时在rc0.d和rc6.d目录下，创建名字为K90auto_run的 文件连接，第一个字符为K，个系统在关闭系统的时候，会运行auto_run，添加一个stop，告诉脚本，现在是关闭模式。<br>注意上面的三行是中，地二，第三行是必须的，否则在运行chkconfig –add auto_run时，会报错。</p></blockquote><ol start="6"><li>脚本放到<code>/etc/rc.d/init.d/</code>目录下，并进入该目录</li></ol><ul><li>赋予执行权限<code>sudo chmod +x start.sh</code>,</li><li><code>chkconfig --add start.sh</code></li><li><code>chkconfig start.sh on</code></li></ul><ol start="7"><li><p>执行完第五步，就会开机自启了。接下来就是制作AMI</p><blockquote><p>首先把实例中创建的<code>数据卷</code>，<code>容器删除</code>，然后停止我们的实例，回到aws的web平台，选择创建映像。 就会得到我们的AMI映像了。可以按照aws的要求发布或者共享给别人。</p></blockquote></li><li><p>注意，实例停止，在启动她的对外ip会发生改变，所以想要ip不变，可以创建弹性ip。这种方法起一次启动AMI需要重启一下，才能正常启动我们的容器.</p></li></ol><h2 id="为容器梦想，奋斗"><a href="#为容器梦想，奋斗" class="headerlink" title="为容器梦想，奋斗!!!"></a>为容器梦想，奋斗!!!</h2>]]></content>
      
      
      
        <tags>
            
            <tag> aws </tag>
            
            <tag> docker </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vue写分页组件</title>
      <link href="/2019/09/11/1/"/>
      <url>/2019/09/11/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 最近在学习使用<a href="https://vuejs.org/" target="_blank" rel="noopener">vue</a>, 仿照<a href="https://leetcode.com/" target="_blank" rel="noopener">Leetcode</a>的题目列表写一个分页的组件<br><a id="more"></a></p><h2 id="vue分页组件"><a href="#vue分页组件" class="headerlink" title="vue分页组件"></a>vue分页组件</h2><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><div><br>    <img src="/images/pagination.gif" width="450px" height="200px" title="pagination" alt="pagination"><br></div><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><blockquote><p>先观察<code>Leetcode</code>分页的特点，存在一下几个注意点</p><ol><li>当页码是<code>第一页</code>或者<code>最后一页</code>的时候，相应的上一页，下一页的按钮就不存在了,</li><li>当页码是<code>前二位</code>或者<code>后二位</code>的时候，选中的页码不会在中间的位置, 其他的页码都是在中间的位置</li><li><code>leetcode</code>的页面切换看着有点特效，不会实现，就不做了</li></ol></blockquote><blockquote><p>接下来就是设计这个组件，在使用组件的时候需要传递一个页码总数，当页码总数小于5的时候就全部展示，只有大于等于5的时候才会分页显示。对页码切换函数的实现，默认设置了一个开始的页码index=1,主要的函数就在<code>selectPage</code>实现，js用的不多，所以实现的很糙。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">        total: &#123;</span><br><span class="line">            type: <span class="built_in">Number</span>,</span><br><span class="line">            required: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    data: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            nowIndex: <span class="number">1</span>, </span><br><span class="line">            left: <span class="built_in">require</span>(<span class="string">`../assets/images/left.png`</span>),</span><br><span class="line">            right: <span class="built_in">require</span>(<span class="string">`../assets/images/right.png`</span>),</span><br><span class="line">            pages: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        selectPage: <span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">const</span> that = <span class="keyword">this</span>;</span><br><span class="line">            that.nowIndex = index</span><br><span class="line">            that.pages = <span class="built_in">Array</span>.from(<span class="function"><span class="keyword">function</span>* <span class="title">gen</span>(<span class="params">start, end</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(start&lt;=end) <span class="keyword">yield</span> start++;</span><br><span class="line">            &#125;(that.nowIndex &gt;= that.total<span class="number">-2</span> ? that.total<span class="number">-4</span>:that.nowIndex<span class="number">-2</span> &gt; <span class="number">0</span> ? that.nowIndex<span class="number">-2</span>:<span class="number">1</span>, </span><br><span class="line">                that.nowIndex &lt;=<span class="number">3</span> ? <span class="number">5</span>:that.nowIndex+<span class="number">2</span>&lt;=that.total ? that.nowIndex+<span class="number">2</span>:that.total))</span><br><span class="line">        &#125;,</span><br><span class="line">        prePage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.nowIndex--</span><br><span class="line">            <span class="keyword">this</span>.selectPage(<span class="keyword">this</span>.nowIndex)</span><br><span class="line">        &#125;,</span><br><span class="line">        nextPage: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.nowIndex++</span><br><span class="line">            <span class="keyword">this</span>.selectPage(<span class="keyword">this</span>.nowIndex)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>接下来就是模版页面的部分<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"total &lt; 5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"index in (1,total)"</span> <span class="attr">:key</span>=<span class="string">"index"</span> </span></span><br><span class="line"><span class="tag">                <span class="attr">:class</span>=<span class="string">"index==nowIndex?'default-span activePage':'default-span'"</span></span></span><br><span class="line"><span class="tag">                @<span class="attr">click</span>=<span class="string">"selectPage(index)"</span>&gt;</span></span><br><span class="line">                &#123;&#123;index&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"total &gt;= 5"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"defautl-span span-border"</span> <span class="attr">v-if</span>=<span class="string">"nowIndex!=1"</span> @<span class="attr">click</span>=<span class="string">"prePage"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"index in pages"</span> </span></span><br><span class="line"><span class="tag">                <span class="attr">:key</span>=<span class="string">"index"</span> </span></span><br><span class="line"><span class="tag">                <span class="attr">:class</span>=<span class="string">"index==nowIndex?'default-span span-border-color activePage':'default-span span-border-color '"</span></span></span><br><span class="line"><span class="tag">                @<span class="attr">click</span>=<span class="string">"selectPage(index)"</span>&gt;</span></span><br><span class="line">                    &#123;&#123;index&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"defautl-span span-border"</span> <span class="attr">v-if</span>=<span class="string">"nowIndex!=total"</span> @<span class="attr">click</span>=<span class="string">"nextPage"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>最后是一些css的实现<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span> <span class="selector-tag">scoped</span>&gt;</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(245, 245, 245);</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pagination</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.default-span</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.span-border</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.span-border-color</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(70, 122, 178);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.activePage</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(70, 122, 178);</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:not(.activePage)</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(245, 245, 245);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>还在vue的摸索中，希望后续会实现自己的小目标，加油吧！</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>149 Max Points on a line 题解</title>
      <link href="/2019/07/14/1/"/>
      <url>/2019/07/14/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 我认为，这道题主要考查的是对直线的认识，和斜率的正确表示.<br><a id="more"></a></p><h2 id="Max-Points-on-a-Line"><a href="#Max-Points-on-a-Line" class="headerlink" title="Max Points on a Line"></a>Max Points on a Line</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Given <code>n</code> points on a <code>2D</code> plane, find the maximum number of points that lie on the same straight line.</p></blockquote><h3 id="输入用例"><a href="#输入用例" class="headerlink" title="输入用例"></a>输入用例</h3><h4 id="Example1"><a href="#Example1" class="headerlink" title="Example1"></a>Example1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1],[2,2],[3,3]]</span><br><span class="line">Output: 3</span><br><span class="line">Explanation:</span><br><span class="line">^</span><br><span class="line">|</span><br><span class="line">|        o</span><br><span class="line">|     o</span><br><span class="line">|  o  </span><br><span class="line">+-------------&gt;</span><br><span class="line">0  1  2  3  4</span><br></pre></td></tr></table></figure><h4 id="Example2"><a href="#Example2" class="headerlink" title="Example2"></a>Example2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Input: [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]</span><br><span class="line">Output: 4</span><br><span class="line">Explanation:</span><br><span class="line">^</span><br><span class="line">|</span><br><span class="line">|  o</span><br><span class="line">|     o        o</span><br><span class="line">|        o</span><br><span class="line">|  o        o</span><br><span class="line">+-------------------&gt;</span><br><span class="line">0  1  2  3  4  5  6</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>这道题要做的主要包括以下几点</p><ol><li>斜率计算,考虑到斜率可能是不能整除小数或者是不可表示的数字，所以在这里斜率使用最简分数形式的字符串形式，对于不可表示的斜率，采用<code>0xffff</code>这个字符串表示。没有特殊含义，就是方便记录。</li><li>最大公约数的计算，采用欧几里得算法</li><li>对于数据里的坑的认识，只有两个相同的点的数据<code>[[0, 0], [0, 0]]</code>这也是直线，算是两个点.</li></ol></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> MaxPointsonaLine</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">gcd</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> x * y != <span class="number">0</span>&#123;</span><br><span class="line"><span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">x %= y</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">y %= x</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line"><span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">slope</span><span class="params">(a, b []<span class="keyword">int</span>)</span> <span class="title">string</span></span>&#123;</span><br><span class="line"><span class="comment">// 考虑竖直的情况, 我的想法是不用竖直存储，用字符串</span></span><br><span class="line">xx := a[<span class="number">0</span>] - b[<span class="number">0</span>]</span><br><span class="line">yy := a[<span class="number">1</span>] - b[<span class="number">1</span>]</span><br><span class="line"><span class="comment">// 特殊的斜率</span></span><br><span class="line"><span class="keyword">if</span> xx == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"0xfffff"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> yy == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"0"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回的是最后化简的分数形式</span></span><br><span class="line">flag := xx * yy &lt; <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> yy &lt; <span class="number">0</span> &#123;</span><br><span class="line">yy = -yy</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> xx &lt; <span class="number">0</span> &#123;</span><br><span class="line">xx = -xx</span><br><span class="line">&#125;</span><br><span class="line">maxCommonDivisor := gcd(xx, yy)</span><br><span class="line">yy /= maxCommonDivisor</span><br><span class="line">xx /= maxCommonDivisor</span><br><span class="line"><span class="keyword">if</span> flag &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"-%d/%d"</span>,yy,xx)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"%d/%d"</span>, yy, xx)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">equal</span><span class="params">(a, b []<span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a[<span class="number">0</span>] == b[<span class="number">0</span>] &amp;&amp; a[<span class="number">1</span>] == b[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxPoints</span><span class="params">(points [][]<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(points) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(points) == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(points) == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">maxPoints := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> index := <span class="number">0</span>; index &lt; <span class="built_in">len</span>(points)<span class="number">-1</span>; index++ &#123;</span><br><span class="line">tmp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">doublePoint := <span class="number">0</span></span><br><span class="line">tmpMax := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> inner := index+<span class="number">1</span>; inner &lt; <span class="built_in">len</span>(points); inner++ &#123;</span><br><span class="line"><span class="comment">// 重复点的情况</span></span><br><span class="line"><span class="keyword">if</span> equal(points[index], points[inner]) &#123;</span><br><span class="line">doublePoint++</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">xl := slope(points[index], points[inner])</span><br><span class="line"><span class="comment">// 首次计算加上本身的点</span></span><br><span class="line"><span class="keyword">if</span> tmp[xl] == <span class="number">0</span> &#123;</span><br><span class="line">tmp[xl] = <span class="number">2</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tmp[xl] += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> tmp[xl] &gt; tmpMax &#123;</span><br><span class="line">tmpMax = tmp[xl]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> tmpMax == <span class="number">0</span> &#123;</span><br><span class="line">tmpMax += <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">tmpMax += doublePoint</span><br><span class="line"><span class="keyword">if</span> tmpMax &gt; maxPoints &#123;</span><br><span class="line">maxPoints = tmpMax</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxPoints</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>这道题题目清晰，思路也是清晰的，但是要考虑在数据中存在的坑，也可能是自己缺乏对直线的认识，开始就把<code>[[0, 0], [0, 0]]</code>这样的数据给忽略了。一定要认真。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕设期间前端所学技术总结</title>
      <link href="/2019/05/18/1/"/>
      <url>/2019/05/18/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;在毕设期间, 帮助舍友完成部分前端页面的开发，记录一下在开发的过程所遇到的问题。<br><a id="more"></a></p><h2 id="item选择问题"><a href="#item选择问题" class="headerlink" title="item选择问题"></a>item选择问题</h2><h3 id="如图实现"><a href="#如图实现" class="headerlink" title="如图实现"></a>如图实现</h3><div><br>    <img src="/images/item-select.gif" width="150px" height="250px" title="item" alt="item"><br></div><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><blockquote><p>这部分的实现主要是先把后端返回的数据展示在线面，每个item的形式如下<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--`` 拼接字符串--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">id</span>=<span class="string">"$&#123;index&#125;"</span> <span class="attr">name</span>=<span class="string">"0"</span>&gt;</span>$&#123;item&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>每个item都是如此，其中id用来唯一标识这个item, 然后每个item有两个状态，选中与没有选中，没有查div还有那些属性，<br>直接用<code>name</code>来标识<code>0</code>是没选中，<code>1</code>是被选中，每个item被选中都会在上面显示，所以上面和下面的要有关联<br>所以直接在实现的时候就用<code>id-num</code>这类的id来标识上面选中的item，其中那个num就是你选中底下item的id。这样两者就可以关联起来了。<br>直接使用str.spite(“-“)[1]就可以拿到相应的id了</p></blockquote><h2 id="闭包的使用"><a href="#闭包的使用" class="headerlink" title="闭包的使用"></a>闭包的使用</h2><blockquote><p>自己一直是写后端的，在用<code>golang</code>完成<code>httpServer</code>的时候，发现有的函数需要多个参数实现功能，但是相应的server函数接口只需要两个参数，<br>所以，我在这里使用了闭包，感觉自己的代码风格向闭包发展了。<br>在开发的一个页面中，要实现的功能是<code>上拉加载</code>, 使用了<code>mui</code>的框架，所以只需要在<code>mui.init</code>中<code>pullRefresh</code> 的<code>up</code>参数定义返回函数即可.<br>返回函数不需要任何参数，但是我在请求上拉加载的数据的时候需要用<code>start</code>和<code>len</code>参数(后端就这么给的接口), 所以想到闭包, 实现如下:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> start = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> len = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;&#125;); <span class="comment">// 根据参数做的请求</span></span><br><span class="line">        start += len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// mui中这样写</span></span><br><span class="line"><span class="keyword">let</span> refreshFunc = refresh();</span><br><span class="line">mui.init(&#123;</span><br><span class="line">    pullRefresh: &#123;</span><br><span class="line">        up: refreshFunc()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="css实现三角形以及做字数统计"><a href="#css实现三角形以及做字数统计" class="headerlink" title="css实现三角形以及做字数统计"></a>css实现三角形以及做字数统计</h2><h3 id="如图实现-1"><a href="#如图实现-1" class="headerlink" title="如图实现"></a>如图实现</h3><div style="display:flex;flex-direction:row;justify-content: flex-start;align-items: flex-start;"><br>    <img src="/images/edit1.png" width="200px" height="150px" alt="edit1"><br>    <img src="/images/edit3.png" width="200px" height="150px" alt="edit3"><br></div><h3 id="css实现三角形"><a href="#css实现三角形" class="headerlink" title="css实现三角形"></a>css实现三角形</h3><blockquote><p>如上图第一张，在灰色的背景下，凸起一个三角形，室友说他是用 <code>canvas</code>画出来的，我在网上找到<a href="https://www.liaoxuefeng.com/article/895922203976832" target="_blank" rel="noopener">廖大的一篇讲解</a>,<br>纯<code>css</code>实现上述的三角形，学习到了。做记录。</p></blockquote><h3 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h3><blockquote><p>对前段接触的比较少，所这次实现了，做一个记录. 文本编辑不是代码如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"edit"</span> <span class="attr">onkeyup</span>=<span class="string">"count()"</span> <span class="attr">maxlength</span>=<span class="string">"140"</span> <span class="attr">placeholder</span>=<span class="string">"等待输入内容"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>设置了允许输入的最大字数，其中<code>count</code>函数实现如下:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#cnt"</span>).text($(<span class="string">".edit"</span>).val().length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>直接更改相应位置的字符数量。</p></blockquote><h2 id="css实现三个点波浪形式的动画"><a href="#css实现三个点波浪形式的动画" class="headerlink" title="css实现三个点波浪形式的动画"></a>css实现三个点波浪形式的动画</h2><h3 id="如图实现-2"><a href="#如图实现-2" class="headerlink" title="如图实现"></a>如图实现</h3><div><img src="/images/bl.gif" width="180px" height="50px"></div><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><blockquote><p>这里主要参考了自己之前看的一份<code>css样式代码片段</code> — <a href="http://caibaojian.com/30-seconds-of-css/" target="_blank" rel="noopener">30秒 CSS</a>, 对自己很有帮助。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bouncing-loader"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>css代码的实现<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">keyframes</span> bouncing-loader &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(0);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0.1</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-1rem);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bouncing-loader</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bouncing-loader</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">24px</span> <span class="number">0.2rem</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#8385aa</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">animation</span>: bouncing-loader <span class="number">0.6s</span> infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bouncing-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">    <span class="attribute">animation-delay</span>: <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bouncing-loader</span> &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span><br><span class="line">    <span class="attribute">animation-delay</span>: <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="关于滚动条滑动的问题"><a href="#关于滚动条滑动的问题" class="headerlink" title="关于滚动条滑动的问题"></a>关于滚动条滑动的问题</h2><h3 id="目标效果"><a href="#目标效果" class="headerlink" title="目标效果"></a>目标效果</h3><p><div style="display:flex;flex-direction:row;justify-content: flex-start;align-items: flex-start;"><br>    <img src="/images/e1.png" width="150px" height="50px"><br>    <img src="/images/e2.png" width="150px" height="50px"><br></div></p><blockquote><p>主要是实现当页面向上滑动一段距离，需要在<code>nav-bar</code>中间显示用户头像和用户名。首先是定义一个div在没有滚动到目标距离的情况下，他的<code>display=none</code>,<br>当滚动到超过目标距离<code>display=flex</code>, 所以重点在获取滚动条到顶部的垂直高度 <code>(即网页被卷上去的高度)</code> 使用<code>$(window).scrollTop()</code>来实现。<br>更多关于滚动的介绍请看文章<a href="https://www.cnblogs.com/wangyihong/p/8056859.html" target="_blank" rel="noopener">js获取元素的滚动高度，和距离顶部的高度</a>.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> top = $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">    <span class="keyword">if</span>(top &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        $(<span class="string">".hidden-info"</span>).css(<span class="string">"display"</span>, <span class="string">"flex"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">".hidden-info"</span>).css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="关于html转义字符的总结"><a href="#关于html转义字符的总结" class="headerlink" title="关于html转义字符的总结"></a>关于html转义字符的总结</h2><blockquote><p>请看文章<a href="https://007sair.github.io/2016/07/04/UNICODE/" target="_blank" rel="noopener">HTML字符转义、特殊字符笔记</a>.</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>这些页面在自己的琢磨下，慢慢的完成，感觉自己对<code>flex</code>更熟悉了<code>(⁎⁍̴̛ᴗ⁍̴̛⁎)</code> ，自己也算是锤炼了一下页面的实现能力。继续加油!　</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算循环小数</title>
      <link href="/2019/05/09/2/"/>
      <url>/2019/05/09/2/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;<code>Leetcode</code>上面的一道题(166), 计算两个数相除的结果，有循环小数的情况要<code>1.(6)</code>这样表示.()里面是<code>循环节</code>.<br><a id="more"></a></p><h2 id="Fraction-to-Recurring-Decimal"><a href="#Fraction-to-Recurring-Decimal" class="headerlink" title="Fraction to Recurring Decimal"></a>Fraction to Recurring Decimal</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.<br>If the fractional part is repeating, enclose the repeating part in parentheses.</p></blockquote><h3 id="输入用例"><a href="#输入用例" class="headerlink" title="输入用例"></a>输入用例</h3><h4 id="Example1"><a href="#Example1" class="headerlink" title="Example1"></a>Example1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: numerator = 1, denominator = 2</span><br><span class="line">Output: &quot;0.5&quot;</span><br></pre></td></tr></table></figure><h4 id="Example2"><a href="#Example2" class="headerlink" title="Example2"></a>Example2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: numerator = 2, denominator = 1</span><br><span class="line">Output: &quot;2&quot;</span><br></pre></td></tr></table></figure><h4 id="Example3"><a href="#Example3" class="headerlink" title="Example3"></a>Example3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: numerator = 2, denominator = 3</span><br><span class="line">Output: &quot;0.(6)&quot;</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>主要是在模拟除法，用一个数组<code>cf</code> 保存每次的<code>余数</code>, 用<code>quotient</code> 保存<code>商</code>. 其中<code>cf</code>数组是我们找到循环的重点.<br>每当向<code>cf</code>数组添加一个数字， 我们要判断， 当前数字是否为0， 是0就是可以除开.<br>不是的话，我们要确定前面是否已经出现过这个数字, 出现就代表我们进入了<code>循环节</code>, 把他输出即可.<br>其中另有一条理论<code>一个分母为N的循环小数的循环节位数最多不超过N-1位</code>, <a href="https://zh.wikipedia.org/wiki/%E5%BE%AA%E7%8E%AF%E5%B0%8F%E6%95%B0" target="_blank" rel="noopener">详情</a></p></blockquote><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> FractiontoRecurringDecimal</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"bytes"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fractionToDecimal</span><span class="params">(numerator <span class="keyword">int</span>, denominator <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">const</span> maxn = <span class="number">65536</span></span><br><span class="line"><span class="keyword">var</span> flag <span class="keyword">bool</span></span><br><span class="line"><span class="keyword">if</span> numerator * denominator &lt; <span class="number">0</span> &#123;</span><br><span class="line">flag = <span class="literal">false</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">flag = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numerator % denominator == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"%d"</span>, numerator/denominator)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numerator &lt; <span class="number">0</span> &#123;</span><br><span class="line">numerator = - numerator</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> denominator &lt; <span class="number">0</span> &#123;</span><br><span class="line">denominator = -denominator</span><br><span class="line">&#125;</span><br><span class="line">quotient := <span class="built_in">make</span>([]<span class="keyword">int</span>, maxn)</span><br><span class="line">cf := <span class="built_in">make</span>([]<span class="keyword">int</span>, maxn)</span><br><span class="line">cf[<span class="number">0</span>] = numerator % denominator</span><br><span class="line">quotient[<span class="number">0</span>] = numerator / denominator</span><br><span class="line">buf := bytes.NewBufferString(<span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> flag &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"%d."</span>, quotient[<span class="number">0</span>]))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"-%d."</span>, quotient[<span class="number">0</span>]))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; denominator<span class="number">-1</span>; i++ &#123;</span><br><span class="line">tmp := (cf[i] * <span class="number">10</span>) % denominator</span><br><span class="line">quotient[i+<span class="number">1</span>] = (cf[i] * <span class="number">10</span>) / denominator</span><br><span class="line"><span class="keyword">if</span> tmp == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> index := <span class="number">1</span>; index &lt;= i+<span class="number">1</span>; index++ &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"%d"</span>, quotient[index]))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String()</span><br><span class="line">&#125;</span><br><span class="line">cf[i+<span class="number">1</span>] = tmp</span><br><span class="line"><span class="keyword">for</span> index := <span class="number">0</span>; index &lt;= i; index++ &#123;</span><br><span class="line"><span class="keyword">if</span> cf[i+<span class="number">1</span>] == cf[index] &#123;</span><br><span class="line"><span class="keyword">if</span> index != <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">for</span> inner := <span class="number">1</span>; inner &lt;= index; inner++ &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"%d"</span>, quotient[inner]))</span><br><span class="line">&#125;</span><br><span class="line">buf.WriteString(<span class="string">"("</span>)</span><br><span class="line"><span class="keyword">for</span> inner := index+<span class="number">1</span>; inner &lt;= i+<span class="number">1</span>; inner++ &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"%d"</span>, quotient[inner]))</span><br><span class="line">&#125;</span><br><span class="line">buf.WriteString(<span class="string">")"</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">buf.WriteString(<span class="string">"("</span>)</span><br><span class="line"><span class="keyword">for</span> inner := <span class="number">1</span>; inner &lt;= i+<span class="number">1</span>; inner++ &#123;</span><br><span class="line">buf.WriteString(fmt.Sprintf(<span class="string">"%d"</span>, quotient[inner]))</span><br><span class="line">&#125;</span><br><span class="line">buf.WriteString(<span class="string">")"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buf.String()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>主要是要清楚，如何判断循环小数的情况，其次是了解循环小数的性质.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode 30和41题</title>
      <link href="/2019/05/09/1/"/>
      <url>/2019/05/09/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 关于<code>Leetcode</code>30题和41题的解题思路.<br><a id="more"></a></p><h2 id="Substring-with-Concatenation-of-All-Words"><a href="#Substring-with-Concatenation-of-All-Words" class="headerlink" title="Substring with Concatenation of All Words"></a>Substring with Concatenation of All Words</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>You are given a string, s, and a list of words, <code>words</code>, that are all of the same length.<br>Find all starting indices of substring(s) in <code>s</code> that is a concatenation of each word in <code>words</code><br>exactly once and without any intervening characters.</p></blockquote><h3 id="输入用例"><a href="#输入用例" class="headerlink" title="输入用例"></a>输入用例</h3><h4 id="Example1"><a href="#Example1" class="headerlink" title="Example1"></a>Example1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">  s = &quot;barfoothefoobarman&quot;,</span><br><span class="line">  words = [&quot;foo&quot;,&quot;bar&quot;]</span><br><span class="line">Output: [0,9]</span><br><span class="line">Explanation: Substrings starting at index 0 and 9 are &quot;barfoor&quot; and &quot;foobar&quot; respectively.</span><br><span class="line">The output order does not matter, returning [9,0] is fine too.</span><br></pre></td></tr></table></figure><h4 id="Example2"><a href="#Example2" class="headerlink" title="Example2"></a>Example2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">  s = &quot;wordgoodgoodgoodbestword&quot;,</span><br><span class="line">  words = [&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]</span><br><span class="line">Output: []</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>首先这道题想到就是<code>滑窗</code>,  维持一个长度为<code>wordLen * arrLen</code>的窗口, 同时考虑在数组中出现的次数，<br>我们需要使用<code>map</code>来存储这个数组的信息. 最后每当出现满足包含全部单词的窗口的时候记录<code>index</code></p></blockquote><h4 id="code"><a href="#code" class="headerlink" title="code"></a>code</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> SubstringwithConcatenationofAllWords</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findSubstring</span><span class="params">(s <span class="keyword">string</span>, words []<span class="keyword">string</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">res := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>)</span><br><span class="line">wordsLen := <span class="built_in">len</span>(words)</span><br><span class="line"><span class="keyword">if</span> wordsLen == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wordLen := <span class="built_in">len</span>(words[<span class="number">0</span>])</span><br><span class="line">length := wordLen * wordsLen</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s) &lt; length &#123;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line">wordsMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> words &#123;</span><br><span class="line">wordsMap[item]++</span><br><span class="line">&#125;</span><br><span class="line">keywords := <span class="built_in">len</span>(wordsMap)</span><br><span class="line">start, end := <span class="number">0</span>, length<span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> ; end &lt; <span class="built_in">len</span>(s); end, start = end+<span class="number">1</span>, start+<span class="number">1</span> &#123;</span><br><span class="line">tMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">required := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := start; i &lt;= end; i += wordLen &#123;</span><br><span class="line">str := s[i : i+wordLen]</span><br><span class="line">tMap[str]++</span><br><span class="line">cnt, ok := wordsMap[str]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> cnt == tMap[str] &#123;</span><br><span class="line">required++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> required == keywords &#123;</span><br><span class="line">res = <span class="built_in">append</span>(res, start)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="First-Missing-Positive"><a href="#First-Missing-Positive" class="headerlink" title="First Missing Positive"></a>First Missing Positive</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Given an unsorted integer array, find the smallest missing positive integer.</p></blockquote><h3 id="输入用例-1"><a href="#输入用例-1" class="headerlink" title="输入用例"></a>输入用例</h3><h4 id="Example1-1"><a href="#Example1-1" class="headerlink" title="Example1"></a>Example1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,0]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure><h4 id="Example2-1"><a href="#Example2-1" class="headerlink" title="Example2"></a>Example2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,4,-1,1]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure><h4 id="Example3"><a href="#Example3" class="headerlink" title="Example3"></a>Example3</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [7,8,9,11,12]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure><h3 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><blockquote><p>其实最好想的办法， 不敢用，就是从1开始判断每个数字是否在数组中， 不再就直接返回了得到答案。但是自己想的方法是想要得到一个<code>转折点</code>, 通过计算来更新这个转折点<br>发现这并不是一个好办法。老老实实的用最初的方法.</p></blockquote><h4 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> FirstMissingPositive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">firstMissingPositive</span><span class="params">(nums []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">cnt := <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> cnt == nums[i] &#123;</span><br><span class="line">cnt ++</span><br><span class="line">i = <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>这两道题坐下来的总结就是，想到就去实现， 不要害怕!</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Loading对话框实现</title>
      <link href="/2019/05/03/1/"/>
      <url>/2019/05/03/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 毕设是用<code>golang</code>写的爬虫框架，写一个<code>demo</code>, 数据在安卓app上展示。在这个过程中， 使用了<code>loading dialog</code>, 做一个记录.<br><a id="more"></a></p><h2 id="Loading-Dialog"><a href="#Loading-Dialog" class="headerlink" title="Loading Dialog"></a>Loading Dialog</h2><h3 id="对话框代码实现"><a href="#对话框代码实现" class="headerlink" title="对话框代码实现"></a>对话框代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadingDialog</span> <span class="keyword">extends</span> <span class="title">Dialog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> TextView tv;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> type;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoadingDialog</span><span class="params">(Context context, <span class="keyword">int</span> type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line">        getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line">        setContentView(R.layout.loading);</span><br><span class="line">        tv = findViewById(R.id.textView);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.type == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.tv.setText(<span class="string">"加载中..."</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.tv.setText(<span class="string">"加载问题..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        LinearLayout ly = findViewById(R.id.loadingLayout);</span><br><span class="line">        ly.getBackground().setAlpha(<span class="number">210</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在活动中应用"><a href="#在活动中应用" class="headerlink" title="在活动中应用"></a>在活动中应用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">      setContentView(R.layout.activity_main);</span><br><span class="line">      loadingDialog = <span class="keyword">new</span> LoadingDialog(<span class="keyword">this</span>, <span class="number">1</span>);</span><br><span class="line">      loadingDialog.setCanceledOnTouchOutside(<span class="keyword">false</span>);</span><br><span class="line">      loadingDialog.setCancelable(<span class="keyword">false</span>);</span><br><span class="line">      loadingDialog.show();</span><br><span class="line">      <span class="keyword">this</span>.requestData();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="自定义对话框布局"><a href="#自定义对话框布局" class="headerlink" title="自定义对话框布局"></a>自定义对话框布局</h3><blockquote><p>在<code>layout</code> 下定义布局文件，并且引用了<code>drawable</code>下的<code>shape.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@android:color/transparent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/loadingLayout"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"151dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"155dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/shape"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/processBar"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleInverse"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@android:color/transparent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="Loading-圆角处理"><a href="#Loading-圆角处理" class="headerlink" title="Loading 圆角处理"></a>Loading 圆角处理</h3><blockquote><p>在<code>drawable</code>文件夹下定义<code>shape.xml</code>, 内容如下，<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"15dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#A9A9A9"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><blockquote><p>有时间换成gif<br><img src="/images/loading.png" alt="loading"></p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://blog.csdn.net/baidu_31093133/article/details/64127917" target="_blank" rel="noopener">简单的loading加载框</a></li><li><a href="https://developer.android.com/guide/topics/resources/drawable-resource.html#Shape" target="_blank" rel="noopener">drawable-resource#Shape</a></li><li><a href="https://developer.android.com/guide/topics/ui/dialogs" target="_blank" rel="noopener">dialogs</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>360企业安全笔试算法题</title>
      <link href="/2019/04/25/2/"/>
      <url>/2019/04/25/2/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 昨天完成360企业安全的线上笔试题，难度适中，对输入用例多加思考.<br><a id="more"></a></p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p><img src="/images/p1.png" alt="p1"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><blockquote><p>字符串转整数, 不允许使用库函数. 我们要做的思考就是:</p><ol><li>字符串不合法的情况，包含非数字字符, 但是<code>.</code>和<code>-</code>以及<code>+</code>要另考虑.</li><li>出现多个<code>.</code>的情况也是不合法.</li><li><code>前导0</code>的问题.</li><li>正负数问题.</li><li>小数直接取整数部分.</li></ol></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">stringtoint</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = str.size();</span><br><span class="line">    <span class="keyword">int</span> point = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isdigit</span>(str[i])) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i] == <span class="string">'.'</span>) &#123;</span><br><span class="line">                point++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">'-'</span>)&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(point &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, j;</span><br><span class="line">    <span class="keyword">if</span>(flag) i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; i&lt;length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] != <span class="string">'0'</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(j=i; j&lt;length; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(str[j] == <span class="string">'.'</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res = res*<span class="number">10</span>+str[j]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">        <span class="keyword">return</span> -res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    getline(<span class="built_in">cin</span>, str);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = stringtoint(str);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p><img src="/images/p2.png" alt="p2"></p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><blockquote><p>一个篮子里放一种颜色，多个篮子可以放同一种颜色，每个篮子不少于2个球。<br>从给的约束来看，就是要把球放在若干个篮子里，并且每个篮子的球<code>颜色</code>相同， <code>数量&gt;=2,切都相等</code>, 并且要篮子的数量最少.<br>所以可以看出是在求若干整数的<code>最大公约数</code>.</p></blockquote><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(a*b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            a = a%b;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            b = b%a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maxCommonFac</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; vs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = gcd(vs[<span class="number">0</span>], vs[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span> length = vs.size();</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">int</span> i=<span class="number">2</span>; i&lt;length; i++) &#123;</span><br><span class="line">        num= gcd(num, vs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length; i++)&#123;</span><br><span class="line">        cnt += (vs[i]/num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mmp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vs;</span><br><span class="line">    <span class="keyword">int</span> n, color;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">if</span>( n == <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; color;</span><br><span class="line">        mmp[color]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;::iterator iter = mmp.begin();</span><br><span class="line">    <span class="keyword">while</span>(iter != mmp.end()) &#123;</span><br><span class="line">        vs.push_back(iter-&gt;second);</span><br><span class="line">        iter++;</span><br><span class="line">    &#125;</span><br><span class="line">    maxCommonFac(vs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>认真对待每一次笔试，仔细分析。多抓算法.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 笔试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1025 Divisor Game 题解</title>
      <link href="/2019/04/25/1/"/>
      <url>/2019/04/25/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; <code>Leetcode</code> Divisor Game这道题，理解为博弈算法，判断最后输赢的问题。<br><a id="more"></a></p><h2 id="Divisor-Game"><a href="#Divisor-Game" class="headerlink" title="Divisor Game"></a>Divisor Game</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Alice and Bob take turns playing a game, with Alice starting first.<br>Initially, there is a number N on the chalkboard.  On each player’s turn, that player makes a move consisting of:</p><ul><li>Choosing any <code>x</code> with <code>0 &lt; x &lt; N</code> and <code>N % x == 0</code>.</li><li>Replacing the number <code>N</code> on the chalkboard with <code>N - x</code>.<br>Also, if a player cannot make a move, they lose the game.<br>Return <code>True</code> if and only if Alice wins the game, assuming both players play optimally.</li></ul></blockquote><h3 id="输入用例"><a href="#输入用例" class="headerlink" title="输入用例"></a>输入用例</h3><p>Example1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 2</span><br><span class="line">Output: true</span><br><span class="line">Explanation: Alice chooses 1, and Bob has no more moves.</span><br></pre></td></tr></table></figure></p><p>Example2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output: false</span><br><span class="line">Explanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.</span><br></pre></td></tr></table></figure></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>采取打表的形式计算。<code>array[i]</code>表示当<code>N=i</code>的时候<code>先选i的人</code>是否可以胜利. 接下来就是对<code>array[i]</code>的计算<br>每次可选的数字都是<code>N</code>的因数，所以先计算<code>N</code>的因数，对每个因数进行计算，判断<code>Alice</code>是否剋胜利。只要有一个胜利即可.</p></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">factor</span><span class="params">(n <span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">res := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> n % i == <span class="number">0</span> &#123;</span><br><span class="line">res = <span class="built_in">append</span>(res, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">divisorGame</span><span class="params">(N <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> N == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> N == <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">res := <span class="built_in">make</span>([]<span class="keyword">bool</span>, N+<span class="number">1</span>)</span><br><span class="line">res[<span class="number">1</span>] = <span class="literal">false</span></span><br><span class="line">res[<span class="number">2</span>] = <span class="literal">true</span></span><br><span class="line"><span class="keyword">if</span> N &lt;= <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res[N]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">3</span>; i &lt;= N; i++ &#123;</span><br><span class="line">flag := <span class="literal">false</span></span><br><span class="line">fac := factor(i)</span><br><span class="line"><span class="keyword">for</span> _, item := <span class="keyword">range</span> fac &#123;</span><br><span class="line">            <span class="comment">// alice先选的item, 所以对于剩余的i-item就是bob是否可以胜利，</span></span><br><span class="line">flag = flag || !res[i-item]</span><br><span class="line">&#125;</span><br><span class="line">res[i] = flag</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res[N]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>其实这道题自信的分析会发现，是判断问题的奇偶性即可。可以在这道题的讨论区找到答案。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python用tkinter实现贪吃蛇</title>
      <link href="/2019/04/22/1/"/>
      <url>/2019/04/22/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp; 在看python的<code>GUI</code>编程， 发现<code>tkinter</code>上手难度还ok，就用他写一个贪吃蛇.<br><a id="more"></a></p><h2 id="贪吃蛇"><a href="#贪吃蛇" class="headerlink" title="贪吃蛇"></a>贪吃蛇</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote><p>主要的思路是把<code>键盘事件</code>与主界面的渲染分开, 🐍的操作就是上下左右，遇到墙，或者进自己的身体，游戏结束。对蛇单开一个线程<br>主界面就是canvas做矩形. 通过<code>queue</code>进行通信.</p></blockquote><h3 id="要掌握的知识"><a href="#要掌握的知识" class="headerlink" title="要掌握的知识"></a>要掌握的知识</h3><ol><li><code>Thread</code>使用</li><li><code>Queue</code>使用</li><li>蛇的运动形成(遇到食物，直接在蛇尾添加， 而没有食物的情况，把去掉蛇尾，添加下一个位置即可)</li><li>矩形相交算法见函数<code>is_rect_overlap</code>.</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_point</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x, y, x+<span class="number">10</span>, y+<span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_rect_overlap</span><span class="params">(p1, p2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">not</span>(p1[<span class="number">0</span>]+<span class="number">10</span>&lt;p2[<span class="number">0</span>] <span class="keyword">or</span> p1[<span class="number">1</span>]+<span class="number">10</span>&lt;p2[<span class="number">1</span>] <span class="keyword">or</span></span><br><span class="line">            p2[<span class="number">0</span>]+<span class="number">10</span>&lt;p1[<span class="number">0</span>] <span class="keyword">or</span> p2[<span class="number">1</span>]+<span class="number">10</span>&lt;p1[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Window</span><span class="params">(Tk)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, width, height, queue: queue.Queue)</span>:</span></span><br><span class="line">        super(Window, self).__init__()</span><br><span class="line">        self.q = queue</span><br><span class="line">        self.w, self.h = width, height</span><br><span class="line">        self.is_game_over = <span class="literal">False</span></span><br><span class="line">        self.canvas = Canvas(self, width=self.w, height=self.h, bg=<span class="string">"#fff"</span>)</span><br><span class="line">        self.canvas.pack()</span><br><span class="line">        self.queue_handle()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_draw</span><span class="params">(self, data, color: str)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> _data <span class="keyword">in</span> data:</span><br><span class="line">            self.canvas.create_rectangle(get_point(*_data), fill=color, outline=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">queue_handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                task = self.q.get(block=<span class="literal">False</span>)</span><br><span class="line">                <span class="keyword">if</span> task[<span class="number">0</span>] == <span class="string">'game_over'</span>:</span><br><span class="line">                    self.stop()</span><br><span class="line">                <span class="keyword">if</span> task[<span class="number">0</span>] == <span class="string">'move'</span>:</span><br><span class="line">                    self._draw(task[<span class="number">1</span>], <span class="string">'green'</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> _:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.is_game_over:</span><br><span class="line">                self.canvas.after(<span class="number">100</span>, self.queue_handle)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stop</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.is_game_over = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Snake</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="string">"""单独的线程处理按键"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, window: Window, queue: queue.Queue)</span>:</span></span><br><span class="line">        super(Snake, self).__init__()</span><br><span class="line">        self.window = window</span><br><span class="line">        self.queue = queue</span><br><span class="line">        self.daemon = <span class="literal">True</span></span><br><span class="line">        self.snake = [(<span class="number">10</span>, <span class="number">0</span>), (<span class="number">20</span>, <span class="number">0</span>), (<span class="number">30</span>, <span class="number">0</span>)]</span><br><span class="line">        self.dir = <span class="string">'Right'</span></span><br><span class="line">        self.food = Food(self.window, self.queue)</span><br><span class="line">        self.start()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.window.is_game_over:</span><br><span class="line">            self._delete()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self.window.is_game_over:</span><br><span class="line">            self.queue.put((<span class="string">'move'</span>, self.snake))</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br><span class="line">            self.move()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">key_press</span><span class="params">(self, event)</span>:</span></span><br><span class="line">        self.dir = event.keysym</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_next_point</span><span class="params">(self)</span>:</span></span><br><span class="line">        now_x, now_y = self.snake[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.dir == <span class="string">'Left'</span>:</span><br><span class="line">            now_x = now_x<span class="number">-10</span></span><br><span class="line">        <span class="keyword">if</span> self.dir == <span class="string">'Up'</span>:</span><br><span class="line">            now_y = now_y<span class="number">-10</span></span><br><span class="line">        <span class="keyword">if</span> self.dir == <span class="string">'Right'</span>:</span><br><span class="line">            now_x = now_x+<span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> self.dir == <span class="string">'Down'</span>:</span><br><span class="line">            now_y = now_y+<span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> now_x, now_y</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self)</span>:</span></span><br><span class="line">        np = self._next_point()</span><br><span class="line">        print(<span class="string">'snake head: '</span>, np)</span><br><span class="line">        width, height = self.window.w, self.window.h</span><br><span class="line">        <span class="keyword">if</span> np <span class="keyword">in</span> self.snake <span class="keyword">or</span> np[<span class="number">0</span>] &lt; <span class="number">0</span> <span class="keyword">or</span> np[<span class="number">0</span>] &gt;= width <span class="keyword">or</span> np[<span class="number">1</span>] &lt; <span class="number">0</span> <span class="keyword">or</span> np[<span class="number">1</span>] &gt;= height:</span><br><span class="line">            self.queue.put((<span class="string">'game_over'</span>, <span class="literal">True</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> is_rect_overlap(np, self.food.pos):</span><br><span class="line">                pos = self.snake[<span class="number">0</span>]</span><br><span class="line">                self.snake.pop(<span class="number">0</span>)</span><br><span class="line">                self.window.canvas.create_rectangle(get_point(*pos), fill=<span class="string">'white'</span>, outline=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.food.gen_point()</span><br><span class="line">            self.snake.append(np)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Food</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, window: Window, queue: queue.Queue)</span>:</span></span><br><span class="line">        self.window = window</span><br><span class="line">        self.queue = queue</span><br><span class="line">        self.pos = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        self.gen_point()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_point</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""注意蛇身的位置"""</span></span><br><span class="line">        self.window.canvas.create_rectangle(get_point(*self.pos), fill=<span class="string">'white'</span>, outline=<span class="string">""</span>)</span><br><span class="line">        self.pos = randint(<span class="number">0</span>, self.window.w), randint(<span class="number">0</span>, self.window.h)</span><br><span class="line">        print(<span class="string">"new pos: "</span>, self.pos)</span><br><span class="line">        self.window.canvas.create_rectangle(get_point(*self.pos), fill=<span class="string">'red'</span>, outline=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">q = queue.Queue()</span><br><span class="line">w = Window(<span class="number">500</span>, <span class="number">500</span>, q)</span><br><span class="line">w.title = <span class="string">'贪吃蛇'</span></span><br><span class="line">snake = Snake(w, q)</span><br><span class="line">w.bind(<span class="string">'&lt;Key-Left&gt;'</span>, snake.key_press)</span><br><span class="line">w.bind(<span class="string">'&lt;Key-Right&gt;'</span>, snake.key_press)</span><br><span class="line">w.bind(<span class="string">'&lt;Key-Up&gt;'</span>, snake.key_press)</span><br><span class="line">w.bind(<span class="string">'&lt;Key-Down&gt;'</span>, snake.key_press)</span><br><span class="line">w.mainloop()</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>注意蛇是如何运动的就可以容易的理解贪吃蛇的思想，可以在上面做更多的扩展.</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用golang实现简单验证码图片</title>
      <link href="/2019/04/19/1/"/>
      <url>/2019/04/19/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;在之前学习<code>python</code>的时候看到<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰python教程</a>, 完成用python画的验证码。今天用<code>golang</code>重新实现<br><a id="more"></a></p><h2 id="Golang实现验证码图片"><a href="#Golang实现验证码图片" class="headerlink" title="Golang实现验证码图片"></a>Golang实现验证码图片</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>实现的过程我们主要使用的是golang的<code>image</code>, <code>color</code>, <code>jpeg</code>库，在图片中添加文字主要使用的库包括<br><code>github.com/golang/freetype/truetype</code>, <code>golang.org/x/image/font</code>, <code>golang.org/x/image/math/fixed</code><br>后面两个库需要<code>FQ</code></p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"image"</span></span><br><span class="line"><span class="string">"image/color"</span></span><br><span class="line"><span class="string">"image/jpeg"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"math/rand"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/golang/freetype/truetype"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"golang.org/x/image/font"</span></span><br><span class="line"><span class="string">"golang.org/x/image/math/fixed"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">char   = <span class="string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span></span><br><span class="line">width  = <span class="number">200</span></span><br><span class="line">height = <span class="number">100</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">randColor</span><span class="params">()</span> <span class="title">color</span>.<span class="title">RGBA</span></span> &#123;</span><br><span class="line">rnd := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line"><span class="keyword">return</span> color.RGBA&#123;<span class="keyword">uint8</span>(rnd.Intn(<span class="number">256</span>)), <span class="keyword">uint8</span>(rnd.Intn(<span class="number">256</span>)),</span><br><span class="line"><span class="keyword">uint8</span>(rnd.Intn(<span class="number">256</span>)), <span class="keyword">uint8</span>(rnd.Intn(<span class="number">256</span>))&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">randChar</span><span class="params">()</span> <span class="title">byte</span></span> &#123;</span><br><span class="line">rnd := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line"><span class="keyword">return</span> char[rnd.Intn(<span class="number">52</span>)]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GenerateImg 生成验证码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenerateImg</span><span class="params">()</span></span> &#123;</span><br><span class="line">upLeft, lowRight := image.Point&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, image.Point&#123;width, height&#125;</span><br><span class="line">img := image.NewRGBA(image.Rectangle&#123;upLeft, lowRight&#125;)</span><br><span class="line"><span class="keyword">for</span> x := <span class="number">0</span>; x &lt; width; x++ &#123;</span><br><span class="line"><span class="keyword">for</span> y := <span class="number">0</span>; y &lt; height; y++ &#123;</span><br><span class="line">img.Set(x, y, randColor())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 字体的路径</span></span><br><span class="line">fontFile, err := os.Open(<span class="string">"./Krungthep.ttf"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">"Open font file error."</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> fontFile.Close()</span><br><span class="line">fontByte, err := ioutil.ReadAll(fontFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">"Read font file error"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">ft, err := truetype.Parse(fontByte)</span><br><span class="line">d := &amp;font.Drawer&#123;</span><br><span class="line">Dst: img,</span><br><span class="line">Src: image.Black,</span><br><span class="line">Face: truetype.NewFace(ft, &amp;truetype.Options&#123;</span><br><span class="line">Size:    <span class="number">22</span>,</span><br><span class="line">DPI:     <span class="number">100</span>,</span><br><span class="line">Hinting: font.HintingNone,</span><br><span class="line">&#125;),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> x := <span class="number">0</span>; x &lt; width; x += <span class="number">50</span> &#123;</span><br><span class="line">d.Dot = fixed.P(x+<span class="number">15</span>, height/<span class="number">2</span>+<span class="number">10</span>)</span><br><span class="line">d.DrawString(<span class="keyword">string</span>(randChar()))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> res, err := os.Create(<span class="string">"res.jpg"</span>); err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">defer</span> res.Close()</span><br><span class="line">err = jpeg.Encode(res, img, &amp;jpeg.Options&#123;<span class="number">90</span>&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">GenerateImg()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p><img src="/images/res.jpg" alt="res"></p>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下如何使用百度云的加速下载</title>
      <link href="/2019/04/17/1/"/>
      <url>/2019/04/17/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;对于百度云的非<code>vip</code>的用户来说，下载一个大文件无限的等待，今天给大家介绍一个方法加速下载.<br><a id="more"></a></p><h2 id="告别百度云限速"><a href="#告别百度云限速" class="headerlink" title="告别百度云限速"></a>告别百度云限速</h2><h3 id="下载安装百度云客户端"><a href="#下载安装百度云客户端" class="headerlink" title="下载安装百度云客户端"></a>下载安装百度云客户端</h3><blockquote><p>下载链接<a href="http://pan.baidu.com/download#pan" target="_blank" rel="noopener">百度云</a>, 下载后正常安装。</p></blockquote><h3 id="下载一个文件"><a href="#下载一个文件" class="headerlink" title="下载一个文件"></a>下载一个文件</h3><blockquote><p><a href="https://drive.google.com/file/d/1RtFZMCYBD27MR_81gNcpCEARrGDoUvnH/view?usp=sharing" target="_blank" rel="noopener">macbdybxs</a><br>下载后解压，进入<code>Other</code>文件夹执行<code>install.sh</code><br>如果百度云客户端已经打开，请关闭重新登陆. 对于出现如下的截图, 点击拒绝即可.<br><img src="/images/miyao.png" alt="钥匙串"><br>在下载的时候看到提示<code>免费试用</code>, 直接点击试用. 会一直处在高速下载状态.</p></blockquote><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><blockquote><p>测试使用视频发现在safari和chrome表现不同，并且在手机上效果也不好直接使用gif了.<br><img src="/images/video.gif" alt="video"></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 杂说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串修改</title>
      <link href="/2019/04/15/1/"/>
      <url>/2019/04/15/1/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;<code>Leetcode</code> 编辑字符串使用最少的步数让两个字符串相同. 自己之前遇到过没有做，今天做了总结一下.<br><a id="more"></a></p><h2 id="Edit-Distance"><a href="#Edit-Distance" class="headerlink" title="Edit Distance"></a>Edit Distance</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Given two words <code>word1</code> and <code>word2</code>, find the minimum number of operations required to convert <code>word1</code> to <code>word2</code>.<br>You have the following 3 operations permitted on a word:</p><ol><li>Insert a character</li><li>Delete a character</li><li>Replace a character</li></ol></blockquote><h3 id="输入用例"><a href="#输入用例" class="headerlink" title="输入用例"></a>输入用例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: word1 = &quot;horse&quot;, word2 = &quot;ros&quot;</span><br><span class="line">Output: 3</span><br><span class="line">Explanation:</span><br><span class="line">horse -&gt; rorse (replace &apos;h&apos; with &apos;r&apos;)</span><br><span class="line">rorse -&gt; rose (remove &apos;r&apos;)</span><br><span class="line">rose -&gt; ros (remove &apos;e&apos;)</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>使用动态规划来解决，<code>dp[i][j]</code> 含义是word1前i个字符变成word2前j个字符所需的最小步数.<br>由此我们可以得出状态转移方程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当word1[i] == word2[j]的时候 dp[i][j] = dp[i-1][j-1] 不需要操作</span><br><span class="line">当word1[i] != word2[j]的时候 dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1])+1寻找最细哦啊的操作步骤</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minDistance</span><span class="params">(word1 <span class="keyword">string</span>, word2 <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">w1, w2 := <span class="built_in">len</span>(word1), <span class="built_in">len</span>(word2)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(word2) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> w1</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(word1) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> w2</span><br><span class="line">&#125;</span><br><span class="line">dp := <span class="built_in">make</span>([][]<span class="keyword">int</span>, w1+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; w1+<span class="number">1</span>; i++ &#123;</span><br><span class="line">dp[i] = <span class="built_in">make</span>([]<span class="keyword">int</span>, w2+<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 初始化dp</span></span><br><span class="line">    <span class="comment">// word1与长度为0的word2做匹配的时候所需的步数.</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; w1+<span class="number">1</span>; i++ &#123;</span><br><span class="line">dp[i][<span class="number">0</span>] = i</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// word1长度为0与word2进行匹配所需的步数</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; w2+<span class="number">1</span>; i++ &#123;</span><br><span class="line">dp[<span class="number">0</span>][i] = i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= w1; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= w2; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> word1[i<span class="number">-1</span>] == word2[j<span class="number">-1</span>] &#123;</span><br><span class="line">dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">dp[i][j] = min(dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>], dp[i<span class="number">-1</span>][j<span class="number">-1</span>])+<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[w1][w2]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(args ...<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">minNum := args[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(args); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> args[i] &lt; minNum &#123;</span><br><span class="line">minNum = args[i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> minNum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="To-sum-up"><a href="#To-sum-up" class="headerlink" title="To sum up"></a>To sum up</h2><blockquote><p>在做本题的时候自己想到的是类似最长公共子序列的求解，但是疏忽了不想等的时更新dp的规则，以及初始化的问题。<br>最终参考了<a href="http://hs-yeah.github.io/acm/2014/07/16/01-HNUOJ-10411" target="_blank" rel="noopener">ACM 题目：字符串的修改</a>使得此题解决。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LRUCache(最近最久未使用算法)题解</title>
      <link href="/2019/04/12/2/"/>
      <url>/2019/04/12/2/</url>
      
        <content type="html"><![CDATA[<p>&nbsp;&nbsp;<code>Leetcode</code> 最近最久未使用算法设计与实现. 主要的思想是双向链表配合<code>map</code>, 以空间换时间.<br><a id="more"></a></p><h2 id="LRUCache"><a href="#LRUCache" class="headerlink" title="LRUCache"></a>LRUCache</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><blockquote><p>Design and implement a data structure for <code>Least Recently Used (LRU) cache</code>. It should support the following operations: <code>get</code> and <code>put</code>.</p></blockquote><h3 id="进一步优化"><a href="#进一步优化" class="headerlink" title="进一步优化"></a>进一步优化</h3><blockquote><p>Could you do both operations in <code>O(1)</code> time complexity?</p></blockquote><h3 id="输入输出例子"><a href="#输入输出例子" class="headerlink" title="输入输出例子"></a>输入输出例子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LRUCache cache = new LRUCache( 2 /* capacity */ );</span><br><span class="line"></span><br><span class="line">cache.put(1, 1);</span><br><span class="line">cache.put(2, 2);</span><br><span class="line">cache.get(1);       // returns 1</span><br><span class="line">cache.put(3, 3);    // evicts key 2</span><br><span class="line">cache.get(2);       // returns -1 (not found)</span><br><span class="line">cache.put(4, 4);    // evicts key 1</span><br><span class="line">cache.get(1);       // returns -1 (not found)</span><br><span class="line">cache.get(3);       // returns 3</span><br><span class="line">cache.get(4);       // returns 4</span><br></pre></td></tr></table></figure><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><blockquote><p>一个固定的空间, 当访问的页面在内存中的时候，把该页面的位置提到开始的位置，<br>当访问的页面不再内存的时候，就要考虑替换页面, 如果空间足够，可以直接把该页面放在开始的位置, 如果空间不够<br>那么在内存中去掉最后一个页面，再把需要的页面放在开始的位置。所以考虑<code>插入的位置</code>, 以及需要很快的访问到某个页面.<br>选择的数据结构是<code>双向链表</code>, 用<code>map</code>存储页面以达到开快速访问. 双向链表保留<code>头尾指针</code>.</p></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// O(1) 常量时间, 考虑一个存值的数组， 一个Left, Right数字代表左右子数</span></span><br><span class="line"><span class="keyword">package</span> LRUCache</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> LRUCache <span class="keyword">struct</span> &#123;</span><br><span class="line">Size   <span class="keyword">int</span></span><br><span class="line">Length <span class="keyword">int</span></span><br><span class="line">Head   *Node</span><br><span class="line">Tail   *Node</span><br><span class="line">Nodess <span class="keyword">map</span>[<span class="keyword">int</span>]*Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Node <span class="keyword">struct</span> &#123;</span><br><span class="line">Key, Value <span class="keyword">int</span></span><br><span class="line">Left       *Node</span><br><span class="line">Right      *Node</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">(capacity <span class="keyword">int</span>)</span> <span class="title">LRUCache</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> LRUCache&#123;Size: capacity, Length: <span class="number">0</span>, Head: <span class="literal">nil</span>, Tail: <span class="literal">nil</span>, Nodess: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]*Node)&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">Get</span><span class="params">(key <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> this.Head == <span class="literal">nil</span> &#123;</span><br><span class="line">this.Nodess[key] = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> res, _ := this.Nodess[key]; res != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> res.Left == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res.Value</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> res.Right != <span class="literal">nil</span> &#123;</span><br><span class="line">res.Left.Right = res.Right</span><br><span class="line">res.Right.Left = res.Left</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">this.Tail = this.Tail.Left</span><br><span class="line">this.Tail.Right = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">res.Right = this.Head</span><br><span class="line">this.Head.Left = res</span><br><span class="line">this.Head = res</span><br><span class="line">this.Head.Left = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">return</span> res.Value</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *LRUCache)</span> <span class="title">Put</span><span class="params">(key <span class="keyword">int</span>, value <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> res := this.Get(key); res != <span class="number">-1</span>&#123;</span><br><span class="line"><span class="comment">// key是存在的, 更新key</span></span><br><span class="line">this.Nodess[key].Value = value</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">node := &amp;Node&#123;key, value, <span class="literal">nil</span>, <span class="literal">nil</span>&#125;</span><br><span class="line"><span class="keyword">if</span> this.Length &lt; this.Size &#123;</span><br><span class="line"><span class="keyword">if</span> this.Head == <span class="literal">nil</span> &#123;</span><br><span class="line">this.Head = node</span><br><span class="line">this.Tail = node</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">node.Right = this.Head</span><br><span class="line">this.Head.Left = node</span><br><span class="line">this.Head = node</span><br><span class="line">&#125;</span><br><span class="line">this.Length++</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">node.Right = this.Head</span><br><span class="line">this.Head.Left = node</span><br><span class="line">this.Head = node</span><br><span class="line"><span class="built_in">delete</span>(this.Nodess, this.Tail.Key)</span><br><span class="line">this.Tail = this.Tail.Left</span><br><span class="line">this.Tail.Right = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">this.Nodess[key] = node</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="To-sum-up"><a href="#To-sum-up" class="headerlink" title="To sum up"></a>To sum up</h2><blockquote><p>首先要熟悉页面调度算法<code>LRU</code>的原理, 一个固定的空间, 当访问的页面在内存中的时候，把该页面的位置提到开始的位置，<br>当访问的页面不再内存的时候，就要考虑替换页面, 如果空间足够，可以直接把该页面放在开始的位置，考虑采用什么样的数据结构能够很快速的完成<code>get</code>, <code>put</code>操作, </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/12/1/"/>
      <url>/2019/04/12/1/</url>
      
        <content type="html"><![CDATA[<p>Hello World 文章摘要<br><a id="more"></a></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">"Hello"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
